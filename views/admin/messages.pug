doctype html
head
  include ../_admin_partials/head

  link(rel="stylesheet", href="css/admin.min.css")
body
  include ../_admin_partials/navbar

  .overlay
  .container-fluid.px-0
    .drawer.position-fixed(data-open='false')
      ul.messages-list.list-unstyled.m-0
        for message in messages
          li.message-item.d-flex.flex-row.flex-wrap.px-3.py-2.position-relative(id=message.id data-message=message)
            span.read-status-indicator
              if !message.is_read
                span
            .d-inline-flex.flex-column.mr-3.w-75
              span.sender-name.text-ellipsis= message.sender_name
              span.sender-email.text-ellipsis.text-secondary.small= message.sender_email
              span.position-absolute(style='top: 8px; right: 6px;')
                span.date.text-ellipsis.fs-10.text-secondary= message.date.toDateString()
                  .split(' ')
                  .slice(1)
                  .join(' ')

    .row.no-gutters
      .col-12.loader.d-none
        .spinner-border.text-primary(role='status')
          span.sr-only Loading...

      .col-12.px-2.px-md-5.main
        .message-section
          .message-bubble.d-none.flex-column.w-100.p-4
            .clearfix
              span.name.font-weight-bold.float-left
              span.date.fs-12.text-light.float-right
            span.email.fs-14.mb-3.text-light
            p.message-text d

    nav.button-share-container.d-none
      a.buttons(role='reply' tooltip='Send a reply')
        i.material-icons reply
      a.buttons(role='delete' tooltip='Delete message')
        i.material-icons delete
      a.buttons(href='#' onclick='return false;')
        span.buttons
          span.rotate


  script(src="https://code.jquery.com/jquery-3.4.1.min.js")
  script.
    $(() => {
      let currentMessage = {};

      let isDrawerOpen = $('.drawer').data('open');

      $('.drawer-toggler').on('click', function() {
        if (isDrawerOpen) {
          $('.drawer')
            .css({
              left: '-310px',
            });

          isDrawerOpen = false;
        } else {
          $('.drawer')
            .css({
              left: '0',
            });

          isDrawerOpen = true;
        }
      });

      $('li.message-item').on('click', function() {
        const message = JSON.parse($(this).attr('data-message'));

        $.ajax({
          url: `/mark-message/`,
          method: 'put',
          dataType: 'json',
          data: {
            messageId: message.id,
          },
          timeout: 6000,
          beforeSend: () => {
            $('.loader')
                .removeClass('d-none').addClass('d-flex');
          },
          statusCode: {
            204: (data) => {
              $(this).find('span.read-status-indicator').addClass('d-hidden');
              $('.message-bubble').removeClass('d-none').addClass('d-flex');

              $('.button-share-container')
                .removeClass('d-none')
                .addClass('d-block');

              $('.loader')
                  .removeClass('d-flex').addClass('d-none');
            },
            202: () => {

            },
            205: () => {

            }
          },
          error: () => {
            window.location.href = '/server-error';
            console.log('500');
          },
        });

        currentMessage = message;

        $('span.name').text(message.sender_name);
        $('span.email').text(message.sender_email);
        const date = message.date.split('T')[0].split('-').join(', ');
        const time = message.date.split('T')[1].split('.')[0];
        $('.clearfix span.date').text(`${date} - ${time}`);
        $('p.message-text').text(message.message_text);
      });

      $('a.buttons').on('click', function() {
        const btnRole = $(this).attr('role');

        if (btnRole === 'delete' && confirm('Are you sure about this?')) {
          $.ajax({
            url: `/delete-message/${currentMessage.id}`,
            method: 'delete',
            dataType: 'json',
            timeout: 6000,
            beforeSend: () => {
              $('.overlay').css({
                visibility: 'visible',
              });
            },
            statusCode: {
              204: (data) => {
                $("ul").find(`[id='${currentMessage.id}']`).hide('slow', function(){ $(this).remove(); $('.message-bubble').removeClass('d-flex').addClass('d-none'); });
                $('.overlay').css({
                  visibility: 'hidden',
                });

                $('.button-share-container')
                  .removeClass('d-block')
                  .addClass('d-none');

                currentMessage = {};
              },
              202: () => {

              },
              205: () => {

              }
            },
            error: () => {
              window.location.href = '/server-error';
              console.log('500');
            },
          });

          $('.button-share-container')
                  .removeClass('d-block')
                  .addClass('d-none');
        } else if (btnRole === 'reply') {
          window.location.href = `mailto: ${currentMessage.sender_email}?subject=Exceptional Developers`;
        }
      });
    });
